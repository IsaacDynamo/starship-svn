name: Release

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            rustflags: -C target-feature=+crt-static

    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    - name: Build
      uses: actions-rs/cargo@v1.0.3
      with:
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Post Build | Prepare artifacts [Windows]
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        strip starship-svn.exe
        7z a starship-svn.zip starship-svn.exe
        cd -
    - name: Post Build | Prepare artifacts [-nix]
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        # TODO: investigate better cross platform stripping
        strip starship-svn || true
        tar czvf starship-svn.tar.gz starship-svn
        cd -

    - name: Upload artifacts [Windows]
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: starship-svn-${{ matrix.target }}.zip
        path: target/${{ matrix.target }}/release/starship-svn.zip
    - name: Upload artifacts [-nix]
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: starship-svn-${{ matrix.target }}.tar.gz
        path: target/${{ matrix.target }}/release/starship-svn.tar.gz
